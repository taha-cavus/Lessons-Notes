# Create React App
npx create-react-app my-app  
cd my-app  
npm start    
<br/>

# Dışarıdan component oluşturup kullanmak
1. Bir js dosyası oluştur
2. Bir fonksyon oluştur ve return kısmına istediğimiz htlm'i yazalım
3. Sonra export default funcName ile bunu dışa aktaralım
4. App.js dosyamıza bunu import edelim
5. Kullanmak istediğimiz yere bunu ekliyelim.(eğer içine child element giricekse <></> şeklinde yazmalıyız. girmiyecek direk kapatır şekilde yazsak yeter </>)

<br/>

# JSX ve Temel Kuralları
Javascriptin içinde javascript kodlarıylada dökümanlarımızı oluşturabiliriz AMA clean olmaz.  
JSX javascriptin içinde HTML yazmamıza olanak tanıyan yapı. Yani yazdığımız HTML'i alğılayıp  
javascripte dönüştürür.

## Temel Kurallar
1. Oluşturduğumuz componentlerin tanımlamadan tut kullanmaya kadar hep ilk harfini Büyük yaz.  
(Asıl önemli kısım import ettiğimizdeki kullanacağımız ad ama bu kuralı genel olarak uygula.)
2. Bir componentin her zaman parenti olmak zorunda.(div kullanmadan <> ve </> aralarınada yazabiliriz.  
Fragment deniyor buna. Bunu react'i import edip <>'ların arasına React.Fragment yazarakda aynı işlem   yapılabilir.)
3. Bazı javascript ifadeleri özel yapı olduğu için HTML'de kullanılan her ifade aynı şekilde yer etmez.  
Mesela "class" js için özel tanımlı yapı olduğu için "className" yazarak elementlere class verebiliriz.


### Koşullu Render İşlemi
İki yol var:  

```javascript
1.
    {isStation && <div>var</div>} 
    {!isStation && <div>var</div>}  
```  

```javascript
2.
    {friends ? <div>var</div> : <div>yok</div>}
```